name: ebook-generator

services:
  web:
    container_name: web
    build: .
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - elasticsearch
      - fluentd
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        tag: web.logs
        fluentd-async: 'true'

  worker:
    container_name: worker
    build: .
    command: celery -A app.tasks.task.celery_app worker --loglevel=info
    depends_on:
      - rabbitmq
      - elasticsearch
      - fluentd
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    volumes:
      - .:/app
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        tag: worker.logs
        fluentd-async: 'true'

  flower:
    image: mher/flower
    container_name: flower
    command: celery flower --persisten=True
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - FLOWER_PORT=5555
    ports:
      - 5555:5555

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    depends_on:
      - elasticsearch
      - fluentd
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        tag: rabbitmq.logs
        fluentd-async: 'true'

  nginxrp:
    container_name: nginxrp
    restart: always
    build: ./config/nginx-server
    ports:
      - 80:80
    depends_on:
      - web
    volumes:
      - ./config/nginx-server/nginx.conf:/etc/nginx/nginx.conf:ro

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    volumes:
      - ./config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - "5601:5601"
    expose:
      - 5601
    depends_on:
      - elasticsearch

  fluentd:
    build:
      context: .
      dockerfile: ./config/fluentd/Dockerfile.fluentd
    volumes:
      -  ./config/fluentd/fluent.conf:/fluentd/etc/fluent.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - web
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
